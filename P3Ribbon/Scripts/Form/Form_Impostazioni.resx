<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label3.Text" xml:space="preserve">
    <value>Questa funzione legge in backround le operazione svolte sui condotti e interviene quando ne viene creato uno nuovo, se ritieni di non aver bisogno di questa funzione o riscontri eccessivi rallentamenti nel tuo progetto puoi interrompere temporaneamente questa funzionalità</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAA
        AAAAAAD2AAAA+gAAAPkAAAD5AAAA+QAAAPkAAAD5AAAA+QAAAPkAAAD+AAAAmQAAAAAAAAAOAAAAyQAA
        AP8AAAD+AAAA/gAAAP4AAAD+AAAA/QAAAP0AAAD9AAAA/QAAAP0AAAD9AAAA/QAAAPkAAADhAAAApAAA
        AEMAAAAEAAAAAAAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACcAAAAAAAA
        AA4AAADKAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA6wAAAHsAAAALAAAAywAAAM8AAADPAAAAzwAAAM8AAADPAAAAzwAAAM8AAADPAAAA0gAA
        AH4AAAAAAAAADAAAAKUAAADSAAAA0AAAANAAAADQAAAA0AAAANAAAADnAAAA/gAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA9wAAAHySfFBMknxQTZJ8UE2SfFBNknxQTZJ8UE2SfFBNknxQTZJ8
        UE2SfFBPknxQLol0SwAAAAABAAAADgAAABIAAAASAAAAEgAAABIAAAASAAAAEQAAAC8AAAC8AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA48OmavDDpmvyw6Zr8sOma/LDpmvyw6Zr8sOm
        a/LDpmvyw6Zr8sOma/bDpmuSw6ZrAMOmawAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AFAAAAD6AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD3wqVq/cKlav/CpWr/wqVq/8Kl
        av/CpWr/wqVq/8Klav/CpWr/wqVq/8KlaprCpWoAwqVqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAARgAAAPcAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAMi8oGdnvKBnaLyg
        Z2i9oGdovKBnaLygZ2i8oGdovKBnaLygZ2i8oGdqvKBnPrOYYgAAAAAAAAAAAwAAAAMAAAADAAAAAwAA
        AAMAAAADAAAAAwAAABUAAACjAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADiAAAASgAA
        AKYAAACpAAAAqAAAAKgAAACpAAAAqgAAAKkAAACoAAAAqQAAAKwAAABnAAAAAAAAAAoAAACJAAAAsAAA
        AK4AAACuAAAArgAAAK4AAACvAAAAzQAAAPsAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD4AAAAwgAA
        AEQAAAABAAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAJwAAAAAAAAADgAA
        AMoAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8FBQX5AQEBvwAA
        AGEAAAARAAAAAAAAAAAAAADsAAAA7wAAAO8AAADvAAAA7wAAAO8AAADvAAAA7wAAAO8AAADzAAAAkgAA
        AAAAAAANAAAAvQAAAPIAAADvAAAA7wAAAO4AAADvAAAA7wAAAPkAAAD/AAAA/wAAAP8AAAD/AAAA/wEB
        Af4AAADvAAAAyQAAAHUAAAAVAAAAAAAAADEAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAA
        ADMAAAAeAAAAAAAAAAMAAAAoAAAAMwAAADIAAAAxAAAAMQAAADIAAAAyAAAAWAAAANcAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAALEAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYwAA
        AP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAKEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABBAAAA9gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA8QAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAIUAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADzwqVqc8Kl
        anTCpWpzwqVqcsKlanHCpWpywqVqc8KlanXCpWp1wqVqd8KlakcpIxYAAAAABgAAAFwAAAB2AAAAdQAA
        AHYAAAB3AAAAeAAAAHoAAACiAAAA8gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AK/CpWr5wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVqoAAAAAAAAAAOAAAAygAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADCAAAAK8KlavnCpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWqgAAAAAAAA
        AA4AAADKAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APsAAADgAAAAjgAAAB8AAAAAwqVq+cKlav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Kl
        ap4WEgwAAAAABgAAAFoAAAByAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABvAAAAbgAA
        AG4AAABoAAAATwAAACIAAAADAAAAAAAAAADCpWr5wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Kl
        av/CpWr/wqVqn8KlagDCpWoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMKlavnCpWr/wqVq/8Klav/CpWr/wqVq/8Kl
        av/CpWr/wqVq/8Klav/CpWqjwqRpCMKkaQfCpGkIwqRpCMKkaQjCpGkIwqRpCMKkaQjCpGkIwqRpCMKk
        aQjCpGkIwqRpCMKlagXCpWoBwqVqAAAAAAAAAAAAAAAAAAAAAAAAAAAAwqVq+cKlav/CpWr/wqVq/8Kl
        av/CpWr/wqVq/8Klav/CpWr/wqVq/8KlaubCpWq7wqVqu8KlarvCpWq7wqVqu8KlarvCpWq7wqVqu8Kl
        arvCpWq7wqVqu8KlarvCpWq7wqVqtcKlap3CpWpwwqVqMsKlagbCpWoAwqVqAAAAAADCpWr5wqVq/8Kl
        av/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Kl
        av/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWrswqVqo8KlajHCpWoAwqVqAMKl
        avnCpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/Dpmv/xKdu/8Snbv/Ep27/xKdu/8Sn
        bv/Ep27/w6du/8Snbv/Dp23/waRp/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq38Kl
        ak/CpWoAwqVq+cKlav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/waRo/9S/lf/u5tb/7ubW/+7m
        1v/u5tb/7ubW/+7m1v/u5tX/7ubW/+3k0v/byqj/xKhw/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Kl
        av/CpWr/wqVq3sKlajrCpWr5wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/Bo2f/28mm////
        //////////////////////////////////////////////79/P/dzaz/wqVp/8Klav/CpWr/wqVq/8Kl
        av/CpWr/wqVq/8Klav/CpWr/wqVqrsKlavnCpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Gj
        Z//byab///////////////////////////////////////////////////////Hr3v/FqnL/wqVp/8Kl
        av/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWrtwqVq+cKlav/CpWr/wqVq/8Klav/CpWr/wqVq/8Kl
        av/CpWr/waNn/9vJpv//////////////////////////////////////////////////////8+3i/8ar
        dP/CpWn/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8KlavPCpWr5wqVq/8Klav/CpWr/wqVq/8Kl
        av/CpWr/wqVq/8Klav/Bo2f/28mm////////////////////////////////////////////////////
        ///j1rz/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVqxsKlavnCpWr/wqVq/8Kl
        av/CpWr/wqVq/8Klav/CpWr/wqVq/8GkaP/XxZ7/+PTt//f07f/39Oz/9/Ts//f07P/39Oz/9/Ts//f0
        7P/28ur/59vD/8iueP/CpGn/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8KlavDCpWpbwqVq+cKl
        av/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Wpcf/JsHz/ybB8/8mve//Jr3v/ya97/8mv
        e//Jr3v/ya97/8iuef/Dpmz/wqRp/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr0wqVqecKl
        agbCpWr5wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Kkaf/CpGn/wqRp/8Kk
        af/CpGn/wqRp/8Kkaf/CpGn/wqRp/8Klav/CpWr/wqVq/8Klav/CpWr/wqVq/8Klav/CpWr7wqVqzsKl
        alnCpWoGwqVqAMKlavXCpWr7wqVq+sKlavrCpWr6wqVq+sKlavrCpWr6wqVq+sKlavrCpWr6wqVq+sKl
        avnCpWr5wqVq+sKlavrCpWr6wqVq+8KlavvCpWr7wqVq+8KlavvCpWr6wqVq+MKlavXCpWrmwqVqvcKl
        anHCpWoewqVqAMKlagAAAAAAABAAAQAQAAAAEAAAABAAAAAf+AAAH/gAABgAAAAQAAAAEAADABAAAQAQ
        AAD///gA///4AP//8AAAEAAAABAAAAAQAAEAEAADAB///wAAAD8AAAAHAAAAAwAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAc=
</value>
  </data>
</root>